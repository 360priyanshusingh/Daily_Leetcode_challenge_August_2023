 bool dfs(vector<int>& nums,int i,vector<int> &dp){
        int n=nums.size();

        if(i==n) return true;

        if(dp[i]!=-1) return dp[i];

        if(i+1< n && nums[i]==nums[i+1]){
            if(dfs(nums,i+2,dp)) return true;
        }
        if(i+2< n && nums[i]==nums[i+1] && nums[i]==nums[i+2]){
            if(dfs(nums,i+3,dp)) return true;
        }
         if(i+2< n && nums[i] +1 ==nums[i+1] && nums[i] + 2 ==nums[i+2]){
            if(dfs(nums,i+3,dp)) return true;
        }
        
        return dp[i] = false; 
    }
    bool validPartition(vector<int>& nums) {
        int n=nums.size();
        vector<int> dp(n+1,-1);
        return dfs(nums,0,dp);
    }
};